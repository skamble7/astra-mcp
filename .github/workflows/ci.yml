name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
    
    - name: Lint with ruff
      run: |
        uv run ruff check .
        uv run ruff format --check .
    
    - name: Type check with mypy
      run: |
        uv run mypy .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
    
    - name: Test common library
      run: |
        uv run pytest common/tests/ -v --cov=common/src --cov-report=xml
    
    - name: Test git-repo-snapshot server
      run: |
        cd servers/git-repo-snapshot
        uv run pytest tests/ -v --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml,./servers/git-repo-snapshot/coverage.xml
        fail_ci_if_error: true

  integration-test:
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
    
    - name: Test STDIO transport
      run: |
        ./scripts/run-stdio.sh git-repo-snapshot &
        SERVER_PID=$!
        sleep 2
        # Add integration test commands here
        kill $SERVER_PID || true
    
    - name: Test SSE transport (if implemented)
      run: |
        ./scripts/run-sse.sh git-repo-snapshot &
        SERVER_PID=$!
        sleep 5
        # Add HTTP-based integration tests here
        kill $SERVER_PID || true