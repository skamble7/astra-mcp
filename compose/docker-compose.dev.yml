version: '3.8'

services:
  git-repo-snapshot-dev:
    build:
      context: ../servers/git-repo-snapshot
      dockerfile: Dockerfile
      target: development
    image: astra-mcp/git-repo-snapshot:dev
    container_name: mcp-git-repo-snapshot-dev
    ports:
      - "8000:8000"
      - "5678:5678"  # debugpy port
    environment:
      - MCP_TRANSPORT=sse
      - MCP_PORT=8000
      - LOG_LEVEL=DEBUG
      - PYTHONPATH=/app/src
      - DEVELOPMENT=true
    volumes:
      - ../servers/git-repo-snapshot/src:/app/src:ro
      - ../common/src:/app/common/src:ro
      - mcp_repos_dev:/app/repos
      - /tmp:/tmp
    networks:
      - mcp-dev-network
    restart: "no"
    command: >
      sh -c "
        pip install debugpy &&
        python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m uvicorn 
        mcp_git_repo_snapshot.transports.sse:app 
        --host 0.0.0.0 
        --port 8000 
        --reload 
        --log-level debug
      "

  # Development database for testing
  postgres-dev:
    image: postgres:15-alpine
    container_name: mcp-postgres-dev
    environment:
      - POSTGRES_DB=mcp_dev
      - POSTGRES_USER=mcp_user
      - POSTGRES_PASSWORD=mcp_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - mcp-dev-network

  # Redis for development caching/sessions
  redis-dev:
    image: redis:7-alpine
    container_name: mcp-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - mcp-dev-network

volumes:
  mcp_repos_dev:
    driver: local
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  mcp-dev-network:
    driver: bridge